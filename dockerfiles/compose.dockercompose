services:
  pgsrc:
    build:
      context: ../
      dockerfile: dockerfiles/pgsrc.Dockerfile
    container_name: pgsrc
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    # environment:
    #   - POSTGRES_USER=postgres
    #   - POSTGRES_PASSWORD=secret
    #   - POSTGRES_DB=company
    ports:
      - "5432:5432"
    volumes:
      - pgdata-src:/var/lib/postgresql/11/main
      # - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      # - ./postgres/postgresql.conf:/var/lib/postgresql/data/postgresql.conf
      # - ./postgres/pg_hba.conf:/var/lib/postgresql/data/pg_hba.conf
      # todo move init.sql to Dockerfile
      - wal_archive:/var/lib/postgresql/11/main/wal_archive/
    # command: -c logging_collector=on
    networks:
      - pgnet

  barman:
    build:
      context: ../
      dockerfile: dockerfiles/barman.Dockerfile
    container_name: barman
    # environment:
    #   - BARMAN_BACKUP_METHOD=postgres
    #   - BARMAN_POSTGRES_USER=barman
    #   - BARMAN_POSTGRES_PASSWORD=barmanpass
    #   - BARMAN_POSTGRES_DB=postgres
    #   - BARMAN_POSTGRES_HOST=pgsrc
    #   - REPLICATION_USER=barman
    #   - REPLICATION_PASSWORD=barmanpass
    #   - REPLICATION_HOST=pgsrc
    #   - POSTGRES_USER=postgres
    #   - POSTGRES_PASSWORD=secret
    #   - POSTGRES_DB=company

    volumes:
      - ../mounted-folders/barman-data:/var/lib/barman
      # - ./barman/pg.conf:/etc/barman.d/pg.conf
      # TODO move pg.conf to barman.dockerfile
      - wal_archive:/var/lib/barman/backups/incoming/
    depends_on:
      - pgsrc
    networks:
      - pgnet

  pgd:
    build:
      context: ../
      dockerfile: dockerfiles/pgd.Dockerfile
    container_name: pgd
    # environment:
    #   - POSTGRES_USER=postgres
    #   - POSTGRES_PASSWORD=secret
    volumes:
      - shared-folder:/mnt/shared
      - postgres-data:/var/lib/postgresql/11/main
    ports:
      - "2222:22"
      - "5433:5432"
    tty: true
    networks:
      - pgnet

volumes:
  pgdata-src:
    driver: local
    driver_opts:
      type: none
      device: "..\\mounted-folders\\pgdata-src"
      o: bind
  barman-data:
    driver: local
    driver_opts:
      type: none
      device: "..\\mounted-folders\\barman-data"
      o: bind
  wal_archive:
    driver: local
    driver_opts:
      type: none
      device: "..\\mounted-folders\\wal_archive"
      o: bind
  shared-folder:
    driver: local
    driver_opts:
      type: none
      device: "..\\mounted-folders\\shared-folder"
      o: bind
  postgres-data:
    driver: local
    driver_opts:
      type: none
      device: "..\\mounted-folders\\pgdata-dst"
      o: bind

networks:
  pgnet:
